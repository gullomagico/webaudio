---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<div
	id="warning-modal"
	aria-modal="true"
	role="dialog"
	class="flex overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full bg-gray-950 bg-opacity-80"
>
	<div class="relative p-4 w-full max-w-2xl max-h-full">
		<div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
			<div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
				<h3 class="text-xl text-gray-900 dark:text-white font-bold text-gradient">{title}</h3>
				<button
					type="button"
					class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
					data-modal-hide="warning-modal"
				>
					<svg
						class="w-3 h-3"
						aria-hidden="true"
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 14 14"
					>
						<path
							stroke="currentColor"
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
					</svg>
					<span class="sr-only">Close modal</span>
				</button>
			</div>
			<div class="p-4 md:p-5 space-y-4">
				<slot />
			</div>
			<div
				class="flex items-center justify-center p-4 md:p-5 border-t border-gray-200 rounded-b dark:border-gray-600"
			>
				<button
					data-modal-hide="warning-modal"
					type="button"
					class="border-green-500 bg-green-950 text-green-300 border-2 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-md px-10 py-2.5 text-center"
					>Ok bro</button
				>
			</div>
		</div>
	</div>
</div>

<script>
	const body = document.querySelector('body');
	body?.classList.add('overflow-hidden');

	const modalHides = document.querySelectorAll('[data-modal-hide]');
	const modal = document.getElementById('warning-modal');

	const eventFn = (event: Event) => {
		if (event.target !== event.currentTarget) return;

		const target = modal;
		target?.classList.add('hidden');
		target?.setAttribute('aria-hidden', 'true');
		target?.removeAttribute('aria-modal');
		target?.removeAttribute('role');
		body?.classList.remove('overflow-hidden');
	};

	modalHides.forEach((hide) => {
		hide.addEventListener('click', eventFn);
	});
	modal?.addEventListener('click', eventFn);
</script>
